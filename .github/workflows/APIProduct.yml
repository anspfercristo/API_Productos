name: Compile e implemente la aplicación de .NET Core en la aplicación web APIProduct con el servicio API Management APIProducts-APIProductos

on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: APIProduct
  AZURE_WEBAPP_PACKAGE_PATH: API_Productos\publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: api-group
  AZURE_APIM_SERVICENAME: APIProducts
  AZURE_APIM_API_ID: APIProductos
  AZURE_APIM_APPSERVICEURL: https://apiproduct-d3adhmbke0hza5gp.chilecentral-01.azurewebsites.net
  API_IMPORT_SPECIFICATION_PATH: API_Productos\publish\swagger.json
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: API_Productos

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}

      - name: Build
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build

      - name: Publish
        run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Generate Open API Specification Document (runtime method)
        shell: pwsh
        run: |
          # Ejecutar la API publicada en segundo plano
          $apiProcess = Start-Process "dotnet" -ArgumentList "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/API_Productos.dll" -PassThru
          
          # Esperar a que la API esté disponible
          Start-Sleep -Seconds 5
          
          # Descargar swagger.json
          Invoke-WebRequest -Uri "https://apiproduct-d3adhmbke0hza5gp.chilecentral-01.azurewebsites.net/swagger/v1/swagger.json" -OutFile "${{ env.API_IMPORT_SPECIFICATION_PATH }}"
          
          # Detener la API
          Stop-Process -Id $apiProcess.Id

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.APIProducts_SPN }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Import API into Azure API Management
        run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" --service-name "${{ env.AZURE_APIM_SERVICENAME }}" --api-id "${{ env.AZURE_APIM_API_ID }}" --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" --specification-format OpenApi --subscription-required false

      - name: logout
        run: az logout
